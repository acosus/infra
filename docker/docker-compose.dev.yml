version: "3.8"
services:
  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://backend:3000
    restart: unless-stopped
    depends_on:
      - backend
      - ml-model
    networks:
      - frontend
      - backend
      - ml
    volumes:
      # - ../ssl:/etc/ssl:ro
      # For hot reloading during development (optional)
      - ../../frontend:/app
      # This is to avoid mounting node_modules in the frontend container
      - /app/node_modules
      # This makes sure that the container uses the .env file that was set up in the Dockerfile.dev
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "10"

  backend:
    build:
      context: ../../backend
      dockerfile: Dockerfile.dev
    expose:
      - "3000"
    environment:
      - NODE_ENV=development
      - ML_ROOT_URL=http://ml-model:5051
    env_file:
      - ../../backend/.env
    restart: unless-stopped
    networks:
      - backend
      - ml
    volumes:
      # For hot reloading during development (optional)
      - ../../backend/src:/app/src
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "10"

  ml-model:
    build:
      context: ../../model
      dockerfile: Dockerfile.dev
    expose:
      - "5051"
    environment:
      - MODELENV=development
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5051
      - EXPRESS_URL=http://backend:3000
      - USE_HARDCODED_DATA=False
      - FLASK_DEBUG=True
    env_file:
      - ../../model/.env
    restart: unless-stopped
    volumes:
      - ml_models:/app/models
      # For hot reloading during development (optional)
      - ../../model:/app
    networks:
      - ml
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "10"

networks:
  frontend:
  backend:
  ml:

volumes:
  ml_models:
    driver: local
